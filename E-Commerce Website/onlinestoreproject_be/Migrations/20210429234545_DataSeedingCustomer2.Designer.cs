// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineStoreProject.Data.DataContext;

namespace OnlineStoreProject.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210429234545_DataSeedingCustomer2")]
    partial class DataSeedingCustomer2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("OnlineStoreProject.Models.Comment", b =>
                {
                    b.Property<int>("commentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentorName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("Like")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("commentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("OnlineStoreProject.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("MailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            PasswordHash = new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 },
                            PasswordSalt = new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 },
                            Username = "seco"
                        },
                        new
                        {
                            Id = 12,
                            PasswordHash = new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 },
                            PasswordSalt = new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 },
                            Username = "ege"
                        },
                        new
                        {
                            Id = 13,
                            PasswordHash = new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 },
                            PasswordSalt = new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 },
                            Username = "ahmet"
                        },
                        new
                        {
                            Id = 14,
                            PasswordHash = new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 },
                            PasswordSalt = new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 },
                            Username = "zeynep"
                        },
                        new
                        {
                            Id = 15,
                            PasswordHash = new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 },
                            PasswordSalt = new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 },
                            Username = "baris"
                        },
                        new
                        {
                            Id = 16,
                            PasswordHash = new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 },
                            PasswordSalt = new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 },
                            Username = "ilayda"
                        },
                        new
                        {
                            Id = 17,
                            PasswordHash = new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 },
                            PasswordSalt = new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 },
                            Username = "merve"
                        },
                        new
                        {
                            Id = 18,
                            PasswordHash = new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 },
                            PasswordSalt = new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 },
                            Username = "gulce"
                        },
                        new
                        {
                            Id = 19,
                            PasswordHash = new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 },
                            PasswordSalt = new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 },
                            Username = "yusuf"
                        },
                        new
                        {
                            Id = 20,
                            PasswordHash = new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 },
                            PasswordSalt = new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 },
                            Username = "volkan"
                        },
                        new
                        {
                            Id = 21,
                            PasswordHash = new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 },
                            PasswordSalt = new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 },
                            Username = "Mehmet"
                        },
                        new
                        {
                            Id = 22,
                            PasswordHash = new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 },
                            PasswordSalt = new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 },
                            Username = "Ismail"
                        });
                });

            modelBuilder.Entity("OnlineStoreProject.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ProductName")
                        .HasColumnType("longtext");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<double?>("Rating")
                        .HasColumnType("double");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("onlinestoreproject_be.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
