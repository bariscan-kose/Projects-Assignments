using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace OnlineStoreProject.Migrations
{
    public partial class DataSeedingCustomer : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.InsertData(
                table: "Customers",
                columns: new[] { "Id", "MailAddress", "Name", "PasswordHash", "PasswordSalt", "PhoneNumber", "Surname", "Username" },
                values: new object[,]
                {
                    { 1, null, null, new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 }, new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 }, null, null, "seco" },
                    { 2, null, null, new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 }, new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 }, null, null, "ege" },
                    { 3, null, null, new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 }, new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 }, null, null, "ahmet" },
                    { 4, null, null, new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 }, new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 }, null, null, "zeynep" },
                    { 5, null, null, new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 }, new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 }, null, null, "baris" },
                    { 6, null, null, new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 }, new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 }, null, null, "ilayda" },
                    { 7, null, null, new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 }, new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 }, null, null, "merve" },
                    { 8, null, null, new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 }, new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 }, null, null, "gulce" },
                    { 9, null, null, new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 }, new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 }, null, null, "yusuf" },
                    { 10, null, null, new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 }, new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 }, null, null, "volkan" },
                    { 11, null, null, new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 }, new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 }, null, null, "Mehmet" },
                    { 12, null, null, new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 }, new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 }, null, null, "Ismail" }
                });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 1);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 2);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 3);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 4);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 5);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 6);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 7);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 8);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 9);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 10);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 11);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 12);
        }
    }
}
