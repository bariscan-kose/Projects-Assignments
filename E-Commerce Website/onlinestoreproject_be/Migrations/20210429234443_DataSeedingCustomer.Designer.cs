// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineStoreProject.Data.DataContext;

namespace OnlineStoreProject.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210429234443_DataSeedingCustomer")]
    partial class DataSeedingCustomer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("OnlineStoreProject.Models.Comment", b =>
                {
                    b.Property<int>("commentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentorName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("Like")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("commentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("OnlineStoreProject.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("MailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 },
                            PasswordSalt = new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 },
                            Username = "seco"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 },
                            PasswordSalt = new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 },
                            Username = "ege"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 },
                            PasswordSalt = new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 },
                            Username = "ahmet"
                        },
                        new
                        {
                            Id = 4,
                            PasswordHash = new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 },
                            PasswordSalt = new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 },
                            Username = "zeynep"
                        },
                        new
                        {
                            Id = 5,
                            PasswordHash = new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 },
                            PasswordSalt = new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 },
                            Username = "baris"
                        },
                        new
                        {
                            Id = 6,
                            PasswordHash = new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 },
                            PasswordSalt = new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 },
                            Username = "ilayda"
                        },
                        new
                        {
                            Id = 7,
                            PasswordHash = new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 },
                            PasswordSalt = new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 },
                            Username = "merve"
                        },
                        new
                        {
                            Id = 8,
                            PasswordHash = new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 },
                            PasswordSalt = new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 },
                            Username = "gulce"
                        },
                        new
                        {
                            Id = 9,
                            PasswordHash = new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 },
                            PasswordSalt = new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 },
                            Username = "yusuf"
                        },
                        new
                        {
                            Id = 10,
                            PasswordHash = new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 },
                            PasswordSalt = new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 },
                            Username = "volkan"
                        },
                        new
                        {
                            Id = 11,
                            PasswordHash = new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 },
                            PasswordSalt = new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 },
                            Username = "Mehmet"
                        },
                        new
                        {
                            Id = 12,
                            PasswordHash = new byte[] { 116, 237, 80, 249, 64, 41, 55, 164, 241, 204, 128, 121, 186, 97, 106, 161, 76, 130, 73, 147, 220, 136, 216, 4, 23, 221, 242, 188, 161, 181, 143, 210, 229, 40, 243, 164, 139, 83, 115, 104, 25, 100, 122, 224, 91, 194, 183, 142, 89, 49, 80, 31, 114, 254, 208, 44, 151, 54, 126, 166, 47, 192, 57, 119 },
                            PasswordSalt = new byte[] { 88, 184, 38, 58, 79, 201, 249, 150, 248, 4, 254, 222, 69, 194, 116, 43, 167, 112, 220, 250, 227, 130, 8, 230, 114, 109, 96, 89, 162, 104, 97, 109, 155, 235, 94, 13, 128, 7, 233, 96, 96, 192, 61, 66, 64, 153, 200, 226, 21, 45, 173, 103, 100, 123, 114, 118, 149, 176, 126, 125, 203, 186, 43, 151, 103, 1, 214, 140, 243, 57, 245, 245, 142, 124, 232, 70, 253, 73, 165, 217, 93, 188, 80, 208, 181, 124, 150, 181, 63, 175, 246, 90, 76, 205, 91, 2, 40, 151, 131, 74, 27, 87, 137, 227, 126, 103, 22, 39, 14, 23, 180, 44, 141, 196, 104, 237, 101, 31, 147, 13, 248, 118, 155, 38, 47, 135, 135, 238 },
                            Username = "Ismail"
                        });
                });

            modelBuilder.Entity("OnlineStoreProject.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ProductName")
                        .HasColumnType("longtext");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<double?>("Rating")
                        .HasColumnType("double");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("onlinestoreproject_be.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
