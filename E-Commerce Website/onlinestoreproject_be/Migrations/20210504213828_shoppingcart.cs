using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace OnlineStoreProject.Migrations
{
    public partial class shoppingcart : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 11);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 12);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 13);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 14);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 15);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 16);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 17);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 18);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 19);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 20);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 21);

            migrationBuilder.DeleteData(
                table: "Customers",
                keyColumn: "Id",
                keyValue: 22);

            migrationBuilder.AddColumn<string>(
                name: "WarrantyStatus",
                table: "Products",
                type: "longtext",
                nullable: true);

            migrationBuilder.AddColumn<decimal>(
                name: "Price",
                table: "Orders",
                type: "decimal(65,30)",
                nullable: false,
                defaultValue: 0m);

            migrationBuilder.AddColumn<int>(
                name: "TaxId",
                table: "Customers",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<bool>(
                name: "isApproved",
                table: "Comments",
                type: "tinyint(1)",
                nullable: false,
                defaultValue: false);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "WarrantyStatus",
                table: "Products");

            migrationBuilder.DropColumn(
                name: "Price",
                table: "Orders");

            migrationBuilder.DropColumn(
                name: "TaxId",
                table: "Customers");

            migrationBuilder.DropColumn(
                name: "isApproved",
                table: "Comments");

            migrationBuilder.InsertData(
                table: "Customers",
                columns: new[] { "Id", "MailAddress", "Name", "PasswordHash", "PasswordSalt", "PhoneNumber", "Surname", "Username" },
                values: new object[,]
                {
                    { 11, null, null, new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 }, new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 }, null, null, "seco" },
                    { 12, null, null, new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 }, new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 }, null, null, "ege" },
                    { 13, null, null, new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 }, new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 }, null, null, "ahmet" },
                    { 14, null, null, new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 }, new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 }, null, null, "zeynep" },
                    { 15, null, null, new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 }, new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 }, null, null, "baris" },
                    { 16, null, null, new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 }, new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 }, null, null, "ilayda" },
                    { 17, null, null, new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 }, new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 }, null, null, "merve" },
                    { 18, null, null, new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 }, new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 }, null, null, "gulce" },
                    { 19, null, null, new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 }, new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 }, null, null, "yusuf" },
                    { 20, null, null, new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 }, new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 }, null, null, "volkan" },
                    { 21, null, null, new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 }, new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 }, null, null, "Mehmet" },
                    { 22, null, null, new byte[] { 33, 197, 45, 38, 200, 203, 181, 113, 222, 243, 44, 82, 227, 225, 207, 71, 115, 84, 103, 117, 184, 40, 211, 168, 248, 147, 172, 209, 235, 71, 83, 4, 48, 77, 124, 6, 98, 31, 224, 35, 50, 63, 156, 104, 251, 183, 35, 122, 116, 95, 235, 50, 49, 118, 204, 42, 98, 4, 216, 248, 232, 144, 182, 34 }, new byte[] { 134, 130, 170, 250, 55, 205, 34, 248, 214, 131, 234, 168, 39, 162, 32, 254, 203, 202, 11, 163, 249, 214, 95, 226, 225, 215, 205, 202, 25, 194, 215, 96, 61, 47, 3, 30, 189, 79, 60, 169, 120, 114, 169, 79, 233, 92, 9, 7, 202, 192, 210, 242, 166, 54, 189, 174, 54, 36, 51, 49, 6, 72, 54, 235, 37, 41, 219, 93, 22, 192, 214, 202, 128, 185, 40, 164, 191, 134, 178, 97, 156, 82, 147, 217, 240, 47, 22, 170, 160, 132, 94, 211, 76, 43, 68, 87, 207, 207, 199, 39, 29, 223, 186, 138, 113, 233, 86, 14, 238, 119, 148, 69, 197, 120, 242, 96, 246, 177, 78, 234, 123, 22, 159, 198, 68, 7, 80, 219 }, null, null, "Ismail" }
                });
        }
    }
}
